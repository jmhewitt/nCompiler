% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/packaging.R
\name{documentNFunction}
\alias{documentNFunction}
\title{Produce a roxygen2 documentation text block for an nFunction}
\usage{
documentNFunction(
  obj = NULL,
  name,
  title,
  description = NULL,
  params = list(),
  otherRoxygen = NULL,
  processWhitespace = TRUE,
  roxComment = "//'",
  checkAgainstObj = TRUE
)
}
\arguments{
\item{obj}{The nFunction being documented. Only required if checkAgainstObj
is TRUE, ignored otherwise.}

\item{name}{The nFunction name. Used in the `@name` field of roxygen2
documentation.}

\item{title}{a descriptive title for the nClass. Used in the `@title` field
of roxygen2 documentation}

\item{description}{A text block giving a full and clear description of the
nClass. For use in the `@description` field of roxyygen2 documentation. If
processWhitespacpe is TRUE, any whitespace in the description will be
ignored and the code block will be reformatted for style.}

\item{params}{A named list. Names are the names of parameters in the
nFunction. Values are descriptions of each parameter.}

\item{processWhitespace}{Logical, default TRUE. Can whitespace be modified to
maintain style?}

\item{roxComment}{what string indicates the start of a roxygen comment?
By default nCompiler packaging puts comments for nFunctions in C++, so the
default value `//'` should almost always be kept.}

\item{checkAgainstObj}{Logical, default TRUE. Should the input be compared
against the actual nClass generator to confirm that all elements have been
documented appropriately?}
}
\description{
Builds out a text block in roxygen2 format given the inputs. The
  user provides the name, title, and description, as well as a named list of
  descriptions of fields and a named list of methods descriptions.
  Optionally, the function can process whitespace and perform a check against
  the nFunction generator object, reporting whether all fields and methods
  were described.
}
\seealso{
\link[roxygen2]{roxygenize}
}
